class Solution:
    def validSquare(self, p1: List[int], p2: List[int], p3: List[int], p4: List[int]) -> bool:
        k=[]
        if(p1==p2 or p1==p2 or p1==p3 or p2==p3 or p2==p4 or p3==p4):
            return False
            exit()
        def dist(x1,y1,x2,y2):
            return ((x2-x1)**2+(y2-y1)**2)
        d12=dist(p1[0],p1[1],p2[0],p2[1])
        d13=dist(p1[0],p1[1],p3[0],p3[1])
        d14=dist(p1[0],p1[1],p4[0],p4[1])
        d23=dist(p2[0],p2[1],p3[0],p3[1])
        d24=dist(p2[0],p2[1],p4[0],p4[1])
        d34=dist(p3[0],p3[1],p4[0],p4[1])
        k.append(d12)
        k.append(d13)
        k.append(d14)
        k.append(d23)
        k.append(d24)
        k.append(d34)
        s=set(k)
        if(len(s)>=3):
            return False
        else:
            return True
